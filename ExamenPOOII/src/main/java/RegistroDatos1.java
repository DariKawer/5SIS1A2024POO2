import com.itextpdf.text.*;
import com.itextpdf.text.pdf.*;
import java.awt.*;
import java.io.*;
import javax.swing.*;
import javax.swing.table.*;

/**
 *
 * @author ilove
 */
public class RegistroDatos1 extends javax.swing.JFrame {

    /**
     * Creates new form RegistroDatos1
     */
    public RegistroDatos1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        InspeccionPanel = new javax.swing.JPanel();
        Registro = new javax.swing.JLabel();
        RegistroPanel = new javax.swing.JPanel();
        ModeloLabel = new javax.swing.JLabel();
        ModeloField = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        NumReporteLabel = new javax.swing.JLabel();
        NumReporteField = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        FechaInspLabel = new javax.swing.JLabel();
        FechaInspField = new javax.swing.JTextField();
        BorrarBoton = new javax.swing.JButton();
        TablaPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        RegistroTabla = new javax.swing.JTable();
        GenerarTotal = new javax.swing.JButton();
        NewFilaBoton = new javax.swing.JButton();
        BorrarFilaBoton = new javax.swing.JButton();
        BorrarTodoBoton = new javax.swing.JButton();
        GenerarBoton = new javax.swing.JButton();
        AbrirBoton = new javax.swing.JButton();
        SalirBoton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        InspeccionPanel.setBackground(new java.awt.Color(0, 204, 153));
        InspeccionPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0), 2));

        Registro.setFont(new java.awt.Font("Comic Sans MS", 1, 20)); // NOI18N
        Registro.setForeground(new java.awt.Color(0, 0, 0));
        Registro.setText("INSPECCIÓN DE MEDIDAS");

        RegistroPanel.setBackground(new java.awt.Color(0, 204, 153));
        RegistroPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        RegistroPanel.setPreferredSize(new java.awt.Dimension(490, 200));

        ModeloLabel.setFont(new java.awt.Font("Leelawadee UI", 0, 16)); // NOI18N
        ModeloLabel.setForeground(new java.awt.Color(0, 0, 0));
        ModeloLabel.setText("Modelo:");

        ModeloField.setBackground(new java.awt.Color(255, 255, 255));
        ModeloField.setFont(new java.awt.Font("Javanese Text", 0, 12)); // NOI18N
        ModeloField.setForeground(new java.awt.Color(0, 0, 0));
        ModeloField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jSeparator1.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator1.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator1.setOrientation(javax.swing.SwingConstants.VERTICAL);

        NumReporteLabel.setFont(new java.awt.Font("Leelawadee UI", 0, 16)); // NOI18N
        NumReporteLabel.setForeground(new java.awt.Color(0, 0, 0));
        NumReporteLabel.setText("Núm Reporte:");

        NumReporteField.setBackground(new java.awt.Color(255, 255, 255));
        NumReporteField.setFont(new java.awt.Font("Javanese Text", 0, 12)); // NOI18N
        NumReporteField.setForeground(new java.awt.Color(0, 0, 0));
        NumReporteField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        jSeparator2.setBackground(new java.awt.Color(0, 0, 0));
        jSeparator2.setForeground(new java.awt.Color(0, 0, 0));
        jSeparator2.setOrientation(javax.swing.SwingConstants.VERTICAL);

        FechaInspLabel.setFont(new java.awt.Font("Leelawadee UI", 0, 16)); // NOI18N
        FechaInspLabel.setForeground(new java.awt.Color(0, 0, 0));
        FechaInspLabel.setText("Fecha Inspección:");

        FechaInspField.setBackground(new java.awt.Color(255, 255, 255));
        FechaInspField.setFont(new java.awt.Font("Javanese Text", 0, 12)); // NOI18N
        FechaInspField.setForeground(new java.awt.Color(0, 0, 0));
        FechaInspField.setHorizontalAlignment(javax.swing.JTextField.CENTER);

        BorrarBoton.setBackground(new java.awt.Color(153, 255, 102));
        BorrarBoton.setForeground(new java.awt.Color(0, 0, 0));
        BorrarBoton.setText("Borrar Datos");
        BorrarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout RegistroPanelLayout = new javax.swing.GroupLayout(RegistroPanel);
        RegistroPanel.setLayout(RegistroPanelLayout);
        RegistroPanelLayout.setHorizontalGroup(
            RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(RegistroPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(ModeloLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ModeloField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(NumReporteLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(NumReporteField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(10, 10, 10)
                .addComponent(FechaInspLabel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(FechaInspField, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(BorrarBoton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        RegistroPanelLayout.setVerticalGroup(
            RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jSeparator2)
            .addComponent(jSeparator1)
            .addGroup(RegistroPanelLayout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, RegistroPanelLayout.createSequentialGroup()
                        .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(ModeloField, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                            .addComponent(BorrarBoton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FechaInspLabel, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(ModeloLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(FechaInspField, javax.swing.GroupLayout.Alignment.LEADING))
                        .addGap(10, 10, 10))
                    .addGroup(RegistroPanelLayout.createSequentialGroup()
                        .addGroup(RegistroPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NumReporteLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(NumReporteField))
                        .addContainerGap())))
        );

        TablaPanel.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(0, 0, 0), 2, true));
        TablaPanel.setOpaque(false);

        RegistroTabla.setBackground(new java.awt.Color(255, 255, 153));
        RegistroTabla.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        RegistroTabla.setFont(new java.awt.Font("DialogInput", 0, 14)); // NOI18N
        RegistroTabla.setForeground(new java.awt.Color(0, 0, 0));
        RegistroTabla.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Puntos a Medir", "STD", "TOL", "Valor 1", "Valor 2", "Valor 3", "Valor 4", "Valor 5", "Valor 6", "Valor 7", "Valor 8", "Total Prendas"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class, java.lang.Double.class
            };
            boolean[] canEdit = new boolean [] {
                true, true, true, true, true, true, true, true, true, true, true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        RegistroTabla.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        RegistroTabla.setRowSelectionAllowed(false);
        RegistroTabla.setSelectionBackground(new java.awt.Color(255, 204, 204));
        RegistroTabla.setSelectionForeground(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(RegistroTabla);
        if (RegistroTabla.getColumnModel().getColumnCount() > 0) {
            RegistroTabla.getColumnModel().getColumn(0).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(0).setPreferredWidth(200);
            RegistroTabla.getColumnModel().getColumn(1).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(1).setPreferredWidth(55);
            RegistroTabla.getColumnModel().getColumn(2).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(2).setPreferredWidth(55);
            RegistroTabla.getColumnModel().getColumn(3).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(3).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(4).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(4).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(5).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(5).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(6).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(6).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(7).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(7).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(8).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(8).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(9).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(9).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(10).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(10).setPreferredWidth(85);
            RegistroTabla.getColumnModel().getColumn(11).setResizable(false);
            RegistroTabla.getColumnModel().getColumn(11).setPreferredWidth(150);
        }

        GenerarTotal.setText("Generar Total Prendas");
        GenerarTotal.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarTotalActionPerformed(evt);
            }
        });

        NewFilaBoton.setText("Nueva Fila");
        NewFilaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                NewFilaBotonActionPerformed(evt);
            }
        });

        BorrarFilaBoton.setText("Borrar Fila");
        BorrarFilaBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarFilaBotonActionPerformed(evt);
            }
        });

        BorrarTodoBoton.setText("Borrar Todo");
        BorrarTodoBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BorrarTodoBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout TablaPanelLayout = new javax.swing.GroupLayout(TablaPanel);
        TablaPanel.setLayout(TablaPanelLayout);
        TablaPanelLayout.setHorizontalGroup(
            TablaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, TablaPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(TablaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(BorrarTodoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenerarTotal)
                    .addComponent(NewFilaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(BorrarFilaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 803, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        TablaPanelLayout.setVerticalGroup(
            TablaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(TablaPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(TablaPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addGroup(TablaPanelLayout.createSequentialGroup()
                        .addComponent(GenerarTotal, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(NewFilaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BorrarFilaBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(BorrarTodoBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        GenerarBoton.setText("Generar PDF");
        GenerarBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                GenerarBotonActionPerformed(evt);
            }
        });

        AbrirBoton.setText("Abrir PDF");
        AbrirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AbrirBotonActionPerformed(evt);
            }
        });

        SalirBoton.setBackground(new java.awt.Color(255, 255, 0));
        SalirBoton.setForeground(new java.awt.Color(0, 0, 0));
        SalirBoton.setText("Salir");
        SalirBoton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SalirBotonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout InspeccionPanelLayout = new javax.swing.GroupLayout(InspeccionPanel);
        InspeccionPanel.setLayout(InspeccionPanelLayout);
        InspeccionPanelLayout.setHorizontalGroup(
            InspeccionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InspeccionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(TablaPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InspeccionPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Registro)
                .addGap(349, 349, 349))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, InspeccionPanelLayout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(GenerarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(AbrirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(SalirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35))
            .addGroup(InspeccionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(RegistroPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 962, Short.MAX_VALUE)
                .addContainerGap())
        );
        InspeccionPanelLayout.setVerticalGroup(
            InspeccionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(InspeccionPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Registro)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(RegistroPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(TablaPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(30, 30, 30)
                .addGroup(InspeccionPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SalirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(AbrirBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(GenerarBoton, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(InspeccionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(InspeccionPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    //ya esta
    private void GenerarTotalActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarTotalActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) RegistroTabla.getModel();
        int rowCount = modelo.getRowCount();

        for (int fila = 0; fila < rowCount; fila++) {
            float totalPrendas = 0;
            for (int columna = 3; columna <= 10; columna++) {
                Object casilla = modelo.getValueAt(fila, columna);
                if (casilla == null || casilla.toString().isEmpty()) {
                    modelo.setValueAt(0, fila, columna);
                    casilla = 0;
                }
                
                try {
                    double casillavalor = Double.parseDouble(casilla.toString());
                    totalPrendas += casillavalor;
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Por favor ingrese un número válido en la fila " + (fila+1) + ", columna " + (columna+1), "Bobo", JOptionPane.ERROR_MESSAGE);
                    return;
                }
            }
            modelo.setValueAt(totalPrendas, fila, 11);
        }
    }//GEN-LAST:event_GenerarTotalActionPerformed

    //ya esta
    private void NewFilaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_NewFilaBotonActionPerformed
        DefaultTableModel modelo = (DefaultTableModel) RegistroTabla.getModel();

        if (modelo.getRowCount() == 0) {
            modelo.addRow(new Object[modelo.getColumnCount()]);
        } else {
            boolean filaIncompleta = false;

            for (int columna = 0; columna < modelo.getColumnCount(); columna++) {
                Object valor = modelo.getValueAt(modelo.getRowCount() - 1, columna);
                if (valor == null || valor.toString().isEmpty()) {
                    filaIncompleta = true;
                    break;
                }
            }

            if (!filaIncompleta) {
                modelo.addRow(new Object[modelo.getColumnCount()]);
            } else {
                JOptionPane.showMessageDialog(this, "Completa la fila actual antes de agregar una nueva.", "Abusado tilin", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_NewFilaBotonActionPerformed

    //ya esta
    private void BorrarFilaBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarFilaBotonActionPerformed
        int row = RegistroTabla.getSelectedRow();
        
        if(row < 0) {
            JOptionPane.showMessageDialog(this, "No has seleccionado fila", "Selecciona bien capo", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) RegistroTabla.getModel();
            modelo.removeRow(row);
        }
    }//GEN-LAST:event_BorrarFilaBotonActionPerformed

    //ya esta
    private void BorrarTodoBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarTodoBotonActionPerformed
        int rowCount = RegistroTabla.getRowCount();

        if (rowCount == 0) {
            JOptionPane.showMessageDialog(this, "No hay filas a eliminar", "Error", JOptionPane.ERROR_MESSAGE);
        } else {
            DefaultTableModel modelo = (DefaultTableModel) RegistroTabla.getModel();
    
            int selectedRow = RegistroTabla.getSelectedRow();
            if (selectedRow == -1) {
                JOptionPane.showMessageDialog(this, "Seleccione una fila para eliminar.", "Error", JOptionPane.ERROR_MESSAGE);
            } else if (selectedRow == rowCount - 1 && modelo.getValueAt(selectedRow, 0) == null) {
                JOptionPane.showMessageDialog(this, "La fila ya ha sido restablecida.", "Error", JOptionPane.ERROR_MESSAGE);
            } else {
                modelo.setRowCount(0);
                //modelo.addRow(new Object[modelo.getColumnCount()]);
            }
        }
    }//GEN-LAST:event_BorrarTodoBotonActionPerformed

    //ya esta
    private void GenerarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_GenerarBotonActionPerformed
        generarPDF();
    }//GEN-LAST:event_GenerarBotonActionPerformed

    //ya esta
    private void AbrirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AbrirBotonActionPerformed
       try {
        File pdfFile = new File("Registro_Medidas.pdf");
        if (pdfFile.exists()) {
            if (Desktop.isDesktopSupported()) {
                Desktop.getDesktop().open(pdfFile);
            } else {
                System.out.println("Tu compu no es compatible jijija");
            }
        } else {
            System.out.println("El archivo no existe jijija");
        }
       } catch (IOException e) {
        e.printStackTrace();
       }  
    }//GEN-LAST:event_AbrirBotonActionPerformed

    //ya esta
    private void SalirBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SalirBotonActionPerformed
        this.dispose();
    }//GEN-LAST:event_SalirBotonActionPerformed

    //ya esta
    private void BorrarBotonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BorrarBotonActionPerformed
        NumReporteField.setText("");
        ModeloField.setText("");
        FechaInspField.setText("");
    }//GEN-LAST:event_BorrarBotonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(RegistroDatos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(RegistroDatos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(RegistroDatos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(RegistroDatos1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new RegistroDatos1().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton AbrirBoton;
    private javax.swing.JButton BorrarBoton;
    private javax.swing.JButton BorrarFilaBoton;
    private javax.swing.JButton BorrarTodoBoton;
    private javax.swing.JTextField FechaInspField;
    private javax.swing.JLabel FechaInspLabel;
    private javax.swing.JButton GenerarBoton;
    private javax.swing.JButton GenerarTotal;
    private javax.swing.JPanel InspeccionPanel;
    private javax.swing.JTextField ModeloField;
    private javax.swing.JLabel ModeloLabel;
    private javax.swing.JButton NewFilaBoton;
    private javax.swing.JTextField NumReporteField;
    private javax.swing.JLabel NumReporteLabel;
    private javax.swing.JLabel Registro;
    private javax.swing.JPanel RegistroPanel;
    private javax.swing.JTable RegistroTabla;
    private javax.swing.JButton SalirBoton;
    private javax.swing.JPanel TablaPanel;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    // End of variables declaration//GEN-END:variables

    //ya esta
    private void generarPDF() {
       String modelo = ModeloField.getText();
        String numReporte = NumReporteField.getText();
        String fechaInsp = FechaInspField.getText();
        int total = RegistroTabla.getRowCount();
        float[] anchosCeldas = {200f, 55f, 55f, 85f, 85f, 85f, 85f, 85f, 85f, 85f, 85f, 150f};//achura de las celdas como en la tabla
        
    Document document = new Document(PageSize.A4.rotate()); //horizontal
    try {
        PdfWriter.getInstance(document, new FileOutputStream("Registro_Medidas.pdf"));
        document.open();

        Paragraph title = new Paragraph("Inspección de Medidas", FontFactory.getFont(FontFactory.HELVETICA, 24, BaseColor.RED));
        title.setAlignment(Element.ALIGN_CENTER);
        document.add(title);
        document.add(new Phrase("\n"));
                
        PdfPTable renglon1 = new PdfPTable(2);
        renglon1.setWidthPercentage(100);
        PdfPCell modeloCell = new PdfPCell(new Phrase("Modelo: " + modelo));
        modeloCell.setHorizontalAlignment(Element.ALIGN_LEFT);
        modeloCell.setBorder(PdfPCell.NO_BORDER);
        renglon1.addCell(modeloCell);
        PdfPCell fechaCell = new PdfPCell(new Phrase("Fecha de Inspección: " + fechaInsp));
        fechaCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        fechaCell.setBorder(PdfPCell.NO_BORDER);
        renglon1.addCell(fechaCell);
        document.add(renglon1);
        
        PdfPTable renglon2 = new PdfPTable(2);
        renglon2.setWidthPercentage(100);
        PdfPCell reporteCell = new PdfPCell(new Phrase("Número de Reporte: " + numReporte));
        reporteCell.setHorizontalAlignment(Element.ALIGN_LEFT);
        reporteCell.setBorder(PdfPCell.NO_BORDER);
        renglon2.addCell(reporteCell);
        PdfPCell totalCell = new PdfPCell(new Phrase("Muestreo de Prendas: " + total));
        totalCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        totalCell.setBorder(PdfPCell.NO_BORDER);
        renglon2.addCell(totalCell);
        document.add(renglon2);
        document.add(new Phrase("\n")); // Agregar espacio después de los datos del formulario

        // Crear tabla PDF a partir de la tabla de Swing
        PdfPTable pdfTable = new PdfPTable(RegistroTabla.getColumnCount());
        pdfTable.setWidthPercentage(100);
        pdfTable.setWidths(anchosCeldas);

        // Agregar encabezados de columna y agregar contenido de la tabla
        for (int i = 0; i < RegistroTabla.getColumnCount(); i++) {
            PdfPCell cell = new PdfPCell(new Phrase(RegistroTabla.getColumnName(i)));
            cell.setHorizontalAlignment(PdfPCell.ALIGN_CENTER);
            cell.setBackgroundColor(BaseColor.LIGHT_GRAY);
            pdfTable.addCell(cell);
        }
        for (int row = 0; row < RegistroTabla.getRowCount(); row++) {
            for (int col = 0; col < RegistroTabla.getColumnCount(); col++) {
                Object value = RegistroTabla.getValueAt(row, col);
                PdfPCell cell = new PdfPCell(new Phrase(value == null ? "" : value.toString()));
                cell.setHorizontalAlignment(PdfPCell.ALIGN_CENTER);
                pdfTable.addCell(cell);
            }
        }
        document.add(pdfTable);
        
        //parte de abajo de la tabla
        Paragraph XD1 = new Paragraph("             AQL ");
        XD1.setAlignment(Element.ALIGN_LEFT);
        document.add(XD1);
        Paragraph XD2 = new Paragraph("            AC RE");
        XD2.setAlignment(Element.ALIGN_LEFT);
        document.add(XD2);
        Paragraph XD3 = new Paragraph("MAYOR __ __");
        XD3.setAlignment(Element.ALIGN_LEFT);
        document.add(XD3);
        
        PdfPTable renglon3 = new PdfPTable(2);
        renglon3.setWidthPercentage(100);
        PdfPCell aceptadoCell = new PdfPCell(new Phrase("Aceptado: ___________"));
        aceptadoCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        aceptadoCell.setBorder(PdfPCell.NO_BORDER);
        renglon3.addCell(aceptadoCell);
        PdfPCell rechazoCell = new PdfPCell(new Phrase("Rechazo: ___________"));
        rechazoCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        rechazoCell.setBorder(PdfPCell.NO_BORDER);
        renglon3.addCell(rechazoCell);
        document.add(renglon3);
        
        PdfPTable renglon4 = new PdfPTable(2);
        renglon4.setWidthPercentage(100);
        PdfPCell proveedorCell = new PdfPCell(new Phrase("Firma del Proveedor: _______________"));
        proveedorCell.setHorizontalAlignment(Element.ALIGN_LEFT);
        proveedorCell.setBorder(PdfPCell.NO_BORDER);
        renglon4.addCell(proveedorCell);
        PdfPCell inspectorCell = new PdfPCell(new Phrase("Firma del Inspector: _______________"));
        inspectorCell.setHorizontalAlignment(Element.ALIGN_RIGHT);
        inspectorCell.setBorder(PdfPCell.NO_BORDER);
        renglon4.addCell(inspectorCell);
        document.add(renglon4);
        
        document.close();

        JOptionPane.showMessageDialog(this, "PDF generado exitosamente.", "Éxito", JOptionPane.INFORMATION_MESSAGE);
    } catch (FileNotFoundException | DocumentException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Error al generar el PDF.", "Error", JOptionPane.ERROR_MESSAGE);
    }
    }
}